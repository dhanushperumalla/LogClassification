
import { motion } from "framer-motion";
import { BarChart3, FileText, Filter, Zap, Code, Brain, Database } from "lucide-react";

export default function About() {
  const features = [
    {
      icon: <FileText className="h-12 w-12 text-blue-500" />,
      title: "Simple File Upload",
      description: "Drag and drop your CSV log files or browse to select them. Our system handles the rest automatically."
    },
    {
      icon: <Zap className="h-12 w-12 text-blue-500" />,
      title: "Instant Classification",
      description: "Our advanced algorithms classify your logs within seconds, providing immediate insights."
    },
    {
      icon: <Filter className="h-12 w-12 text-blue-500" />,
      title: "Intelligent Filtering",
      description: "Automatically categorizes logs by type, severity, and other key attributes for easy analysis."
    },
    {
      icon: <BarChart3 className="h-12 w-12 text-blue-500" />,
      title: "Comprehensive Reports",
      description: "Download detailed classification reports in CSV format for further analysis and record-keeping."
    }
  ];

  const classificationApproaches = [
    {
      icon: <Code className="h-10 w-10 text-green-500" />,
      title: "Regular Expression (Regex)",
      description: "Handles the most simplified and predictable patterns in logs. Useful for patterns that are easily captured using predefined rules."
    },
    {
      icon: <Brain className="h-10 w-10 text-purple-500" />,
      title: "Sentence Transformer + Logistic Regression",
      description: "Manages complex patterns when there is sufficient training data. Utilizes embeddings generated by Sentence Transformers and applies Logistic Regression as the classification layer."
    },
    {
      icon: <Database className="h-10 w-10 text-amber-500" />,
      title: "Large Language Models (LLM)",
      description: "Used for handling complex patterns when sufficient labeled training data is not available. Provides a fallback or complementary approach to the other methods."
    }
  ];

  return (
    <section id="about" className="section-padding bg-gray-50 overflow-hidden">
      <div className="container px-4 mx-auto">
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="text-center mb-16 max-w-3xl mx-auto"
        >
          <span className="inline-block px-3 py-1 text-sm text-blue-700 bg-blue-50 rounded-full mb-4">
            About Our System
          </span>
          <h2 className="mb-4">Powerful Log Classification Made Simple</h2>
          <p className="text-lg text-gray-600 text-balance">
            Our log classification system uses a hybrid framework combining three complementary approaches to handle varying levels of complexity in log patterns, ensuring flexibility and effectiveness in processing different types of data.
          </p>
        </motion.div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16">
          {features.map((feature, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="glass rounded-xl p-6 hover-lift"
            >
              <div className="mb-4">{feature.icon}</div>
              <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
              <p className="text-gray-600">{feature.description}</p>
            </motion.div>
          ))}
        </div>
        
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="mb-16 bg-white rounded-2xl p-8 shadow-sm"
        >
          <h2 className="text-2xl font-semibold mb-6 text-center">Our Hybrid Classification Framework</h2>
          <p className="text-gray-600 mb-8 text-center max-w-3xl mx-auto">
            We implement a hybrid log classification system that combines three complementary approaches to handle varying 
            levels of complexity in log patterns, ensuring optimal accuracy for all types of data.
          </p>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {classificationApproaches.map((approach, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="border border-gray-100 rounded-xl p-6 hover:shadow-md transition-all"
              >
                <div className="flex justify-center mb-4">{approach.icon}</div>
                <h3 className="text-xl font-semibold mb-3 text-center">{approach.title}</h3>
                <p className="text-gray-600 text-center">{approach.description}</p>
              </motion.div>
            ))}
          </div>
        </motion.div>
        
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-8 md:p-12"
        >
          <div className="grid grid-cols-1 md:grid-cols-12 gap-8 items-center">
            <div className="md:col-span-8">
              <h2 className="text-2xl md:text-3xl font-semibold mb-4 text-balance">
                Simplify your log analysis workflow today
              </h2>
              <p className="text-lg text-gray-600 mb-6 md:pr-8">
                Stop spending hours manually reviewing logs. Our system automatically classifies logs 
                into meaningful categories, helping you focus on solving problems instead of finding them.
              </p>
              <button 
                onClick={() => document.getElementById('classify-section')?.scrollIntoView({ behavior: 'smooth' })}
                className="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-full transition-all"
              >
                Try It Now
              </button>
            </div>
            <div className="md:col-span-4">
              <div className="relative">
                <div className="absolute inset-0 bg-blue-200 rounded-full blur-2xl opacity-20"></div>
                <div className="relative bg-white rounded-xl p-4 shadow-sm">
                  <div className="flex items-center mb-4 space-x-2">
                    <div className="w-3 h-3 bg-red-400 rounded-full"></div>
                    <div className="w-3 h-3 bg-yellow-400 rounded-full"></div>
                    <div className="w-3 h-3 bg-green-400 rounded-full"></div>
                  </div>
                  <div className="space-y-2">
                    <div className="h-3 bg-gray-100 rounded w-full"></div>
                    <div className="h-3 bg-gray-100 rounded w-5/6"></div>
                    <div className="h-3 bg-gray-100 rounded w-4/6"></div>
                    <div className="h-3 bg-blue-100 rounded w-full"></div>
                    <div className="h-3 bg-gray-100 rounded w-3/6"></div>
                    <div className="h-3 bg-gray-100 rounded w-5/6"></div>
                    <div className="h-3 bg-gray-100 rounded w-4/6"></div>
                    <div className="h-3 bg-yellow-100 rounded w-full"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
